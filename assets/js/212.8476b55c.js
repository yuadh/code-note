(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{523:function(s,t,a){"use strict";a.r(t);var e=a(7),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),t("h2",{attrs:{id:"shmget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shmget"}},[s._v("#")]),s._v(" shmget()")]),s._v(" "),t("p",[s._v("用于创建共享内存")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmget")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("key_t")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmflg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("key_t key")]),s._v(" 第一个参数用于共享内存命名，不同进程通过 "),t("code",[s._v("key")]),s._v(" 进行共享内存识别。函数不止用于创建共享内存，这里返回的描述符有可能是已经创建好的命名为 "),t("code",[s._v("key")]),s._v(" 共享内存的描述符")]),s._v(" "),t("li",[t("code",[s._v("size_t size")]),s._v(" 指定需要的共享内存空间大小")]),s._v(" "),t("li",[t("code",[s._v("int shmflg")]),s._v(" 限权标志 ， 如果想要在 "),t("code",[s._v("key")]),s._v(" 表示的共享内存不存在时创建的话可以使用 "),t("code",[s._v("IPC_CREAT")]),s._v(" 进行指示，如果还要指定改共享内存的权限的话（和liunx下文件权限意义相同），可以与权限做或运算。如果创建新的共享内存且指定共享内存的权限为 0644 （表示该进程的共享内存对于该用户创建的其他内存而言具有rw限权，同用户组以及其他用户权限只有r限权），则可以指定 为 "),t("code",[s._v("IPC_CREAT | 0644")])]),s._v(" "),t("li",[s._v("返回成功为 key 相关的共享空间描述符")]),s._v(" "),t("li",[s._v("失败 -1")])]),s._v(" "),t("h2",{attrs:{id:"shmat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shmat"}},[s._v("#")]),s._v(" shmat()")]),s._v(" "),t("p",[s._v("第一次创建完共享内存时，它还不能被任何进程访问，"),t("code",[s._v("shmat")]),s._v(" 函数作用就是用来启动对共享内存的访问，并把共享内存连接到当前的地址空间")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shm_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("shm_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmfg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("调用成功返回共享内存首地址，调用失败返回-1")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("shm_id")])]),s._v(" "),t("li",[t("code",[s._v("shm_addr")])]),s._v(" "),t("li",[t("code",[s._v("shmfg")])])]),s._v(" "),t("h2",{attrs:{id:"shmdt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shmdt"}},[s._v("#")]),s._v(" shmdt()")]),s._v(" "),t("p",[s._v("该函数用于将内存从当前进程中分离")]),s._v(" "),t("p",[s._v("需要注意，将共享内存分离并不是删除它，只是使该共享内存对当前进程不再可用")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmdt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" shamddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);