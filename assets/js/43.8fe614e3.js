(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{356:function(v,_,t){"use strict";t.r(_);var l=t(7),r=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),_("p",[v._v("简单类型又叫做基本数据类型或者 值类型，复杂数据类型又叫做 引用类型")]),v._v(" "),_("p",[v._v("值类型：在存储时变量中存储的是值的本身")]),v._v(" "),_("ul",[_("li",[v._v("string")]),v._v(" "),_("li",[v._v("number")]),v._v(" "),_("li",[v._v("boolean")]),v._v(" "),_("li",[v._v("undefined")]),v._v(" "),_("li",[v._v("null")])]),v._v(" "),_("p",[v._v("引用类型：在存储时变量中存储的仅仅是地址")]),v._v(" "),_("ul",[_("li",[v._v("Object")]),v._v(" "),_("li",[v._v("Array")]),v._v(" "),_("li",[v._v("Date")])]),v._v(" "),_("h2",{attrs:{id:"栈和堆"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#栈和堆"}},[v._v("#")]),v._v(" 栈和堆")]),v._v(" "),_("p",[v._v("栈：由操作系统自动分配释放函数的参数值、局部变量的值等")]),v._v(" "),_("p",[v._v("堆：存储复杂类型，一般由程序员分配释放，如果不释放，由垃圾回收机制回收")]),v._v(" "),_("p",[v._v("复杂数据类型 在栈中开辟空间，但是只存放地址值。实际存放内容在堆中")]),v._v(" "),_("p",[_("strong",[v._v("参数传递")])]),v._v(" "),_("p",[v._v("和 c 语言的指针相似")]),v._v(" "),_("p",[v._v("复杂数据类型传递的是地址值 所有会改变参数的值")]),v._v(" "),_("p",[v._v("而简单数据类型不会改变参数的值 是因为值传递")])])}),[],!1,null,null,null);_.default=r.exports}}]);